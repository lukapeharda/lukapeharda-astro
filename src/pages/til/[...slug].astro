---
import MainLayout from "../../layouts/MainLayout.astro";
import PrevNext from '../../components/PrevNext.astro';
import TweetLink from '../../components/TweetLink.astro';
import Divider from '../../components/Divider.astro';
import ColorLink from '../../components/ColorLink.astro';

import { fetchGithubContent } from '../../lib/github';
import { parseMarkdownGroups, processContent } from "../../lib/tils";
import { marked } from 'marked';

export async function getStaticPaths() {
  const GITHUB_TILS_INDEX_URL = 'https://raw.githubusercontent.com/lukapeharda/til/refs/heads/master/README.md';
  const indexContent = await fetchGithubContent(GITHUB_TILS_INDEX_URL);
  const parsed = marked.lexer(indexContent);
  const groups = parseMarkdownGroups(parsed);

  // Flatten all items and create paths
  let items = groups.flatMap(group =>
    group.items.map(item => ({
        params: {
            slug: item.slug
        },
        props: {
            url: item.url,
            group: group.heading,
            title: item.title
        }
    }))
  );

  const numberOfItems = items.length;

  return items.map((item, i) => ({
    params: item.params,
    props: {
        ...item.props,
        nextPost: i + 1 === numberOfItems
            ? null
            : {
                data: {
                    url: '/til/' + items[i + 1].params.slug + '/',
                    title: items[i + 1].props.title,
                }
            },
        prevPost: i === 0
            ? null
            : {
                data: {
                    url: '/til/' + items[i - 1].params.slug + '/',
                    title: items[i - 1].props.title,
                }
            }
    },
  }));
}

const { url, group, title, prevPost, nextPost } = Astro.props;
const { slug } = Astro.params;
const content = await fetchGithubContent(url);
const html = await processContent(content);
---
<MainLayout title={ title } description="Collection of small tidbits of knowledge">
    <article class="relative h-full w-full bg-e6n-black light-mode:bg-white">
        <div class="xl:w-1/2 md:w-2/3 p-4 md:p-8 text-content mb-24 md:mb-0">
            <div class="til-item" set:html={ html }></div>
            <Divider />
            <p class="pb-3 text-slate-400 light-mode:text-slate-800 text-xl">
                If you like this article consider <TweetLink text={ `${title} on https://lukapeharda.com/til/${slug} by @lukapeharda` }>tweeting</TweetLink> or check out my other <ColorLink href="/til/" color="red">TILs</ColorLink>.
            </p>
            <PrevNext prevPost={prevPost} nextPost={nextPost} />
        </div>
    </article>
</MainLayout>

<style is:global>
  .til-item h1 {
    @apply text-white text-4xl italic mb-4;
  }
  .til-item p {
    @apply pb-3 text-slate-400 text-xl;
  }
  .til-item a {
    @apply border-b border-e6n-yellow hover:bg-e6n-yellow hover:text-white;
  }
</style>